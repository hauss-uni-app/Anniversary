<template>
	<view v-if="showCalendar">
		<uni-calendar ref="calendar" :insert="true" :lunar="true" @change="change" :selected="selected" />
		<button type="primary" @click="togglePopup('bottom', 'popup')">底部弹出 popup</button>
		<uni-popup ref="showpopup" :type="type" @change="change"><text class="popup-content">{{ content }}</text></uni-popup>
	</view>
</template>

<script>
	import uniCalendar from '@/components/uni-calendar/uni-calendar.vue';
	import uniPopup from '@/components/uni-popup/uni-popup.vue';
	export default {
		components: {
			uniCalendar,
			uniPopup
		},
		data() {
			return {
				content: 'aaaaaaaaaaaa',
				type: 'bottom',
				showCalendar: false,
				selected: [{
						date: '2019-08-20',
						info: '打卡'
					},
					{
						date: '2019-08-21',
						info: '签到',
						data: {
							custom: '自定义信息',
							name: '自定义消息头'
						}
					},
					{
						date: '2019-08-22',
						info: '已打卡'
					},
					{
						date: '2019-11-21',
						info: '签到2',
						data: {
							custom: '自定义信息',
							name: '自定义消息头'
						}
					},
					{
						date: '2019-11-21',
						info: '签到1',
						data: {
							custom: '自定义信息',
							name: '自定义消息头'
						}
					}
				]
			}
		},
		onReady() {
			this.$nextTick(() => {
				this.showCalendar = true
				// this.$refs['showpopup'].open()
				// this.togglePopup('bottom', 'popup')
				console.log("$nextTick");
			})
		},
		methods: {
			change(e) {
				console.log(e);
				if (e.extraInfo != undefined)
					this.content = e.extraInfo.info
			},
			togglePopup(type, open) {
				switch (type) {
					case 'top':
						this.content = '顶部弹出 popup'
						break

					case 'bottom':
						this.content = '底部弹出 popup'
						break
					case 'center':
						this.content = '居中弹出 popup'
						break
				}
				this.type = type
				this.$nextTick(() => {
					this.$refs['show' + open].open()
				})
			}
		}
	};
</script>

<style>
	.popup-content {
		/* #ifndef APP-NVUE */
		display: block;
		/* #endif */
		background-color: #fff;
		padding: 15px;
		font-size: 14px;
	}
</style>
